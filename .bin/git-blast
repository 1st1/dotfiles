#!/usr/bin/env python
"""
Shows git branches sorted by last commit date, noting when branch has been
merged:

    $ git blast
    * master 33 minutes ago
      some-feature 4 days ago [M]
      dev-branch 4 days ago
      legacy-branch 5 days ago [M]
      another-feature 4 months ago
"""

# https://github.com/wolever/git-blast
# tl;dr: all code code is licensed under simplified BSD, unless stated otherwise.

# Unless stated otherwise in the source files, all code is copyright 2017 David
# Wolever <david@wolever.net>. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

#    1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.

#    2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# THIS SOFTWARE IS PROVIDED BY DAVID WOLEVER ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL DAVID WOLEVER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of David Wolever.

import subprocess as sp

def xcall(cmd):
    return sp.check_output(cmd.split()).decode("utf-8")

C_GREEN = '\033[0;32m'
# C_BLUE = '\033[0;34m'
C_BLUE = '\033[38;5;185m'
C_RESET = '\033[0;0m'

cur_branch = xcall("git rev-parse --abbrev-ref HEAD").strip()
merged_branches = set([
    x.split()[-1] for x
    in xcall("git branch --merged").splitlines()
])

by_date = xcall(
    "git for-each-ref --sort=-committerdate refs/heads/ "
    "--format=%(refname:short)%09%(committerdate:relative)"
)
for line in by_date.splitlines():
    branch, _, date = line.partition("\t")
    output = ""
    if branch == cur_branch:
        output += "* %s%s" %(C_GREEN, branch)
    else:
        output += "  %s" %(branch, )
    output += " %s%s%s" %(C_BLUE, date, C_RESET)
    if branch in merged_branches and branch != cur_branch:
        output += " [%sM%s]" %(C_GREEN, C_RESET)
    print(output)
